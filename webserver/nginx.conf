# Modified configuration file for the Nginx server

user www-data; # Nginx runs as nginx low-privileged user anyway
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;





events {
        worker_connections 768;
        # multi_accept on;
}

http {

        log_format websocket '$remote_addr - $remote_user [$time_local] '
                     '"$request" $status $body_bytes_sent '
                     '"$http_referer" "$http_user_agent" '
                     '"Connection: $http_connection" "Upgrade: $http_upgrade"';

        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;

   
   
        ##
        # Logging Settings
        ##

        access_log /var/log/nginx/access.log;
   #    error_log /var/log/nginx/error.log;

        ##
        # Gzip Settings
        ##

        gzip on;

        # gzip_vary on;
        # gzip_proxied any;
        # gzip_comp_level 6;
        # gzip_buffers 16 8k;
        # gzip_http_version 1.1;
        # gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;

        ##
        # Virtual Host Configs
        ##

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;

# server {
#        listen 80;
#        server_name localhost;
#        return 301 https://$host$request_uri;
#}




server {
     

        listen 443 ssl; # listen only on port 443
        ssl_certificate /etc/nginx/certs/ft_transcendence.crt;
        ssl_certificate_key /etc/nginx/certs/ft_transcendence.key;
        ssl_protocols TLSv1.2 TLSv1.3; # keep only TLSv1.2 and TLSv1.3
      
      
        ##
        # Servername
        ##
        
        server_name HOSTNAME; # change via environment variable

        root /usr/share/nginx/html;
        index index.html;
      
        ##
        # Errorpages
        ##

  #      location / { # handle requests to the root of the server
   #             try_files $uri /index.html;     # try to find the requested file in the root directory
    #    }

        location / { 

                proxy_pass http://front-end:5173; # send requests to the api container
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
             #   proxy_set_header Host $host;
                proxy_set_header Host localhost; # for testing
                proxy_cache_bypass $http_upgrade;                
        }


        # location /gamefront { 

        #         proxy_pass http://gamefront:3000; # send requests to the api container
        #         proxy_http_version 1.1;
        #         proxy_set_header Upgrade $http_upgrade;
        #         proxy_set_header Connection 'upgrade';
        #      #   proxy_set_header Host $host;
        #         proxy_set_header Host localhost; # for testing
        #         proxy_cache_bypass $http_upgrade;                
        # }

        location /api { 

                proxy_pass http://back-end:8000; # send requests to the api container
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;                
        }

        location /ws { 

                proxy_pass http://game-logic:8001; # send requests to the api container
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                #proxy_set_header Host $host;
                proxy_set_header Host localhost; # for testing
                # proxy_cache_bypass $http_upgrade; 
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;

                access_log /dev/stdout websocket;
                error_log /dev/stderr warn;

        }

        location /admin { 

                proxy_pass http://back-end:8000; # send requests to the api container
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;                
        }

        location /static { 

                proxy_pass http://back-end:8000; # send requests to the api container
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;                
        }

        location /media { 

                proxy_pass http://back-end:8000; # send requests to the api container
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;                
        }

}







}

